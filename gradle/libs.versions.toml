[versions]
kotlin = "2.0.0"
jackson = "2.17.2"
okhttp = "4.12.0"
retrofit = "2.9.0"
dataframe = "0.12.1"
educational-ml-library = "1.0.13"

[libraries]
kotlin-stdlib = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib", version.ref = "kotlin" }
annotations = { group = "org.jetbrains", name = "annotations", version = "23.0.0" }
twitter4j-core = { group = "org.twitter4j", name = "twitter4j-core", version = "4.0.7" }
twitter4j-v2 = { group = "io.github.takke", name = "jp.takke.twitter4j-v2", version = "1.4.2" }
jsoup = { group = "org.jsoup", name = "jsoup", version = "1.17.2" }
jackson-dataformat-yaml = { group = "com.fasterxml.jackson.dataformat", name = "jackson-dataformat-yaml", version.ref = "jackson" }
jackson-datatype-jsr310 = { group = "com.fasterxml.jackson.datatype", name = "jackson-datatype-jsr310", version.ref = "jackson" }
jackson-module-kotlin = { group = "com.fasterxml.jackson.module", name = "jackson-module-kotlin", version.ref = "jackson" }
retrofit = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
converter-jackson = { group = "com.squareup.retrofit2", name = "converter-jackson", version.ref = "retrofit" }
okhttp = { group = "com.squareup.okhttp3", name = "okhttp", version.ref = "okhttp" }
logging-interceptor = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "okhttp" }
kotlin-css-jvm = { group = "org.jetbrains", name = "kotlin-css-jvm", version = "1.0.0-pre.58-kotlin-1.3.0" }
kotlinx-serialization = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version = "1.6.2" }
edu-ai-format = { group = "com.jetbrains.edu", name = "edu-ai-format", version = "0.0.4" }
# test dependencies
junit = { group = "junit", name = "junit", version = "4.13.2" }
kotlin-test-junit = { group = "org.jetbrains.kotlin", name = "kotlin-test-junit", version.ref = "kotlin" }
mockwebserver = { group = "com.squareup.okhttp3", name = "mockwebserver", version.ref = "okhttp" }
mockk = { group = "io.mockk", name = "mockk", version = "1.12.0" }
openTest4J = { group = "org.opentest4j", name = "opentest4j", version = "1.3.0" }
dataframe = { module = "org.jetbrains.kotlinx:dataframe", version.ref = "dataframe" }
educational-ml-library-core = { group = "com.jetbrains.educational.ml", name = "educational-ml-library-core", version.ref = "educational-ml-library" }
educational-ml-library-hints = { group = "com.jetbrains.educational.ml", name = "educational-ml-library-hints", version.ref = "educational-ml-library" }

[plugins]
kotlinPlugin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinSerializationPlugin = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
intelliJPlatformPlugin = { id = "org.jetbrains.intellij.platform", version = "2.1.0" }
downloadPlugin = { id = "de.undercouch.download", version = "5.3.0" }
propertiesPlugin = { id = "net.saliman.properties", version = "1.5.2" }
testRetryPlugin = { id = "org.gradle.test-retry", version = "1.5.1" }
